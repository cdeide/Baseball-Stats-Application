// Generated by view binder compiler. Do not edit!
package com.example.cpsc321_finalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cpsc321_finalproject.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPlayerSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ContentPlayerSearchBinding include2;

  @NonNull
  public final FloatingActionButton playerSearchActionButton;

  @NonNull
  public final AppBarLayout playersearchAppbar;

  @NonNull
  public final Toolbar playersearchToolbar;

  @NonNull
  public final Button searchButton;

  private ActivityPlayerSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull ContentPlayerSearchBinding include2,
      @NonNull FloatingActionButton playerSearchActionButton,
      @NonNull AppBarLayout playersearchAppbar, @NonNull Toolbar playersearchToolbar,
      @NonNull Button searchButton) {
    this.rootView = rootView;
    this.include2 = include2;
    this.playerSearchActionButton = playerSearchActionButton;
    this.playersearchAppbar = playersearchAppbar;
    this.playersearchToolbar = playersearchToolbar;
    this.searchButton = searchButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPlayerSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPlayerSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_player_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPlayerSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.include2;
      View include2 = ViewBindings.findChildViewById(rootView, id);
      if (include2 == null) {
        break missingId;
      }
      ContentPlayerSearchBinding binding_include2 = ContentPlayerSearchBinding.bind(include2);

      id = R.id.player_search_action_button;
      FloatingActionButton playerSearchActionButton = ViewBindings.findChildViewById(rootView, id);
      if (playerSearchActionButton == null) {
        break missingId;
      }

      id = R.id.playersearch_appbar;
      AppBarLayout playersearchAppbar = ViewBindings.findChildViewById(rootView, id);
      if (playersearchAppbar == null) {
        break missingId;
      }

      id = R.id.playersearch_toolbar;
      Toolbar playersearchToolbar = ViewBindings.findChildViewById(rootView, id);
      if (playersearchToolbar == null) {
        break missingId;
      }

      id = R.id.search_button;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      return new ActivityPlayerSearchBinding((ConstraintLayout) rootView, binding_include2,
          playerSearchActionButton, playersearchAppbar, playersearchToolbar, searchButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
