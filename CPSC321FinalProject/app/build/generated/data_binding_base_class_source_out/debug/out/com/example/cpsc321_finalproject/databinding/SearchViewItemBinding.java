// Generated by view binder compiler. Do not edit!
package com.example.cpsc321_finalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cpsc321_finalproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SearchViewItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final EditText itemMaxSpinner;

  @NonNull
  public final TextView itemMaxText;

  @NonNull
  public final EditText itemMinSpinner;

  @NonNull
  public final TextView itemMinText;

  @NonNull
  public final ConstraintLayout searchItem;

  @NonNull
  public final TextView searchItemTitle;

  @NonNull
  public final CardView searchViewItem;

  private SearchViewItemBinding(@NonNull CardView rootView, @NonNull EditText itemMaxSpinner,
      @NonNull TextView itemMaxText, @NonNull EditText itemMinSpinner,
      @NonNull TextView itemMinText, @NonNull ConstraintLayout searchItem,
      @NonNull TextView searchItemTitle, @NonNull CardView searchViewItem) {
    this.rootView = rootView;
    this.itemMaxSpinner = itemMaxSpinner;
    this.itemMaxText = itemMaxText;
    this.itemMinSpinner = itemMinSpinner;
    this.itemMinText = itemMinText;
    this.searchItem = searchItem;
    this.searchItemTitle = searchItemTitle;
    this.searchViewItem = searchViewItem;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SearchViewItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SearchViewItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.search_view_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SearchViewItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_max_spinner;
      EditText itemMaxSpinner = ViewBindings.findChildViewById(rootView, id);
      if (itemMaxSpinner == null) {
        break missingId;
      }

      id = R.id.item_max_text;
      TextView itemMaxText = ViewBindings.findChildViewById(rootView, id);
      if (itemMaxText == null) {
        break missingId;
      }

      id = R.id.item_min_spinner;
      EditText itemMinSpinner = ViewBindings.findChildViewById(rootView, id);
      if (itemMinSpinner == null) {
        break missingId;
      }

      id = R.id.item_min_text;
      TextView itemMinText = ViewBindings.findChildViewById(rootView, id);
      if (itemMinText == null) {
        break missingId;
      }

      id = R.id.search_item;
      ConstraintLayout searchItem = ViewBindings.findChildViewById(rootView, id);
      if (searchItem == null) {
        break missingId;
      }

      id = R.id.search_item_title;
      TextView searchItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (searchItemTitle == null) {
        break missingId;
      }

      CardView searchViewItem = (CardView) rootView;

      return new SearchViewItemBinding((CardView) rootView, itemMaxSpinner, itemMaxText,
          itemMinSpinner, itemMinText, searchItem, searchItemTitle, searchViewItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
